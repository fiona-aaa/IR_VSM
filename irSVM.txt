思路想法
——SVM带域
2022/11/01
1.域
	诗名：txt文档的名字
	作者：第一行
	诗句：除第一行以外的
	要求——要求实现自定义组合域中的查询
	
	0.难道对每个组合都各自存一个文档？感觉不太现实。
	1.或者把它们存到一个文档中，记录下诗名、作者、诗句的起始位置（后一个的起始是前一个的结尾+1），查的时候根据要求选择位置。
	如果这样就需要用一个结构体或者类来保存读取的数据和一些起始位置。
	2.打着前面的突然想到，用一个结构体，分别存诗名、作者、诗句，然后算词汇数量的时候在加起来不就行了？比第一个简单好像。
	但是还要统计所有词汇并排序，是不是会麻烦？
	嗯。。。但不分开存的话，也需要统计所有文档的词汇，这也就文档变成了原来的三倍，计算压力交给电脑。
	
2.处理词项
	要求：先对词项进行排序（字母序列），统一成小写，单词变成原型（这里不做强制要求，因为大家可能对NLP不太了解）
	根据自定义组合域，这里用switchcase或者if，组合也不太多（2**3=8，七种，不可能什么都不查），读所有文档的词项，排序、变小写、单词变原型
	（如果能import辅助包就更好啦），把它存到新的变量里（突然不知道存读取的文件的变量叫什么了，字符串？），方便后面用。

3.计算词频tf
	用一个二维数组存，每行一个词项（注意这里是所有的文档中的词项），列就是查询+要查询的文档（步骤2处理过的），存的就是某个词项在某个文档中出现的次数，
	然后加一取对数。log10（N+1）。
	因为后面还需要查询向量以及统计某个词出现了多少次，所以查询向量在第一个，这样直接从1开始（跳过查询）遍历数组就可以了。
	...突然想到，总文档数一定，把查询放后面也可以，总之不能放中间。
	
4.计算idf
	还是对于所有词项，
	用二维数组，每行一个词项，只有一列，是idf。存这些文档中每个词项在多少个文档中出现了。方法就是遍历步骤3中的二维数组，注意跳过第一个（第一个查询），
	统计每行非0元素的个数，存到idf数组中。
	
5.向量表示文档
	对每一个文档，计算向量。
	用步骤3、4的两个数组。
	先假设一共k个词项。
	每个文档。假设要计算文档m(第m个文档)的向量。
	那么0<=i<=k-1,m[i] = tf[i][m]*idf[i][0]（因为我把查询放在了第一个，所以m不用减1）
	查询，就是quary[i] = tf[i][0]*idf[i][0]
	...这个idf[i][0]怎么回事？步骤4直接用一维数组就可以了嘛。
6.余弦相似度
	这个怎么算？我不会。
	
思路大概捋顺了。接下来解决怎么实现的问题。
肯定用python，python真的简单。

问题：
1.构造一个类或者结构体。完成！
2.怎么读文件名到一个变量。完成！
3.怎么只读取文档的第一行。完成！
4.怎么做到只读取文档的不包含第一行的部分。完成！
5.标点符号、大小写、词项恢复原型，怎么弄？除了词项恢复原型都完成了。
6.怎么给文档中的词项排序？sorted
7.算log调什么包？
8.怎么把文件夹dataset中的每个文档都读出来，统计有几个文档？完成！os包
9.我的编译原理怎么办？有点后悔了。如果我上周不高强度熬夜，上周二中午我就不会困得起不来，我就不会发懒错过王刚的课
（上网课效果真的不如线下），我就不会没怎么听课，我就不会这节课也听不懂，我就不会上着编译原理研究这个。
10.下节课还是上王刚的，李忠伟讲得真的不如王刚。
11.所以我这周还得自学第四章。。。
12.怎么把不同的文档合并到一起？完成！字符串用加号连接就ok

	
	
	
	
	
	
	
	
	